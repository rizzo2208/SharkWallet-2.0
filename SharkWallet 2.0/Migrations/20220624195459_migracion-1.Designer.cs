// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharkWallet_2._0.DBcontext;

#nullable disable

namespace SharkWallet_2._0.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220624195459_migracion-1")]
    partial class migracion1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SharkWallet_2._0.entidades.Balance", b =>
                {
                    b.Property<int>("BalanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BalanceID"), 1L, 1);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.HasKey("BalanceID");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("SharkWallet_2._0.entidades.Billetera", b =>
                {
                    b.Property<int>("BilleteraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BilleteraID"), 1L, 1);

                    b.HasKey("BilleteraID");

                    b.ToTable("Billetera");
                });

            modelBuilder.Entity("SharkWallet_2._0.Entidades.LogIn", b =>
                {
                    b.Property<int>("LogInID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogInID"), 1L, 1);

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("Usuario")
                        .HasColumnType("int");

                    b.HasKey("LogInID");

                    b.HasIndex("Usuario");

                    b.ToTable("LogIn");
                });

            modelBuilder.Entity("SharkWallet_2._0.entidades.Monedas", b =>
                {
                    b.Property<int>("MonedasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonedasID"), 1L, 1);

                    b.Property<int?>("Balance")
                        .HasColumnType("int");

                    b.Property<int?>("Monedas")
                        .HasColumnType("int");

                    b.Property<string>("MonedasNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MonedasID");

                    b.HasIndex("Balance");

                    b.HasIndex("Monedas");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("SharkWallet_2._0.entidades.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"), 1L, 1);

                    b.Property<int?>("Billetera")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("Billetera");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SharkWallet_2._0.Entidades.LogIn", b =>
                {
                    b.HasOne("SharkWallet_2._0.entidades.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("Usuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("SharkWallet_2._0.entidades.Monedas", b =>
                {
                    b.HasOne("SharkWallet_2._0.entidades.Balance", "balance")
                        .WithMany()
                        .HasForeignKey("Balance");

                    b.HasOne("SharkWallet_2._0.entidades.Billetera", null)
                        .WithMany("Moneda")
                        .HasForeignKey("Monedas");

                    b.Navigation("balance");
                });

            modelBuilder.Entity("SharkWallet_2._0.entidades.Usuario", b =>
                {
                    b.HasOne("SharkWallet_2._0.entidades.Billetera", "billetera")
                        .WithMany()
                        .HasForeignKey("Billetera");

                    b.Navigation("billetera");
                });

            modelBuilder.Entity("SharkWallet_2._0.entidades.Billetera", b =>
                {
                    b.Navigation("Moneda");
                });
#pragma warning restore 612, 618
        }
    }
}
